{"ast":null,"code":"export const initialState = {\n  user: null,\n  currIndex: 0,\n  currUser: null,\n  sellUser: null,\n  amount: 0\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_INDEX\":\n      return { ...state,\n        currIndex: action.index\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        currUser: action.user\n      };\n\n    case \"SELECTED_USER\":\n      const userInd = state.user.findIndex(item => item.first == action.name); // const newUser=[...state.user];\n      // newUser[userInd]=newUser[userInd].balance>action.amt?{...newUser[userInd],balance:Number(newUser[userInd].balance) + Number(action.amt)}:null\n\n      const userIndex = state.user.findIndex(item => item.first == state.currUser.first); // newUser[userIndex]=newUser[userIndex].balance>action.amt?{...newUser[userIndex],balance:newUser[userIndex].balance-action.amt}:null\n\n      async () => {\n        const result = await axios({\n          url: 'http://localhost:8080/api/send',\n          method: \"POST\",\n          payload: {\n            user: newUser,\n            id: userInd,\n            amount: action.amt\n          }\n        });\n        console.log(result.data);\n        dispatch({\n          type: \"TAKE_USER\",\n          user: result.data\n        });\n      };\n\n      return { ...state,\n        user: newUser\n      };\n\n    case \"TAKE_USER\":\n      return { ...state,\n        user: action.user\n      };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/DELL/spark-mern/banking-spark/src/reducer.js"],"names":["initialState","user","currIndex","currUser","sellUser","amount","reducer","state","action","type","index","userInd","findIndex","item","first","name","userIndex","result","axios","url","method","payload","newUser","id","amt","console","log","data","dispatch"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAC;AACtBC,EAAAA,IAAI,EAAC,IADiB;AAErBC,EAAAA,SAAS,EAAC,CAFW;AAGtBC,EAAAA,QAAQ,EAAC,IAHa;AAItBC,EAAAA,QAAQ,EAAC,IAJa;AAKtBC,EAAAA,MAAM,EAAC;AALe,CAAnB;;AAUP,MAAMC,OAAO,GAAE,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAE3B,UAAOA,MAAM,CAACC,IAAd;AACG,SAAK,WAAL;AACI,aAAM,EACF,GAAGF,KADD;AAEFL,QAAAA,SAAS,EAACM,MAAM,CAACE;AAFf,OAAN;;AAIH,SAAK,UAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,QAAQ,EAACK,MAAM,CAACP;AAFb,OAAP;;AAKJ,SAAK,eAAL;AACI,YAAMU,OAAO,GAACJ,KAAK,CAACN,IAAN,CAAWW,SAAX,CAAqBC,IAAI,IAAEA,IAAI,CAACC,KAAL,IAAYN,MAAM,CAACO,IAA9C,CAAd,CADJ,CAGI;AACA;;AAEA,YAAMC,SAAS,GAACT,KAAK,CAACN,IAAN,CAAWW,SAAX,CAAqBC,IAAI,IAAEA,IAAI,CAACC,KAAL,IAAYP,KAAK,CAACJ,QAAN,CAAeW,KAAtD,CAAhB,CANJ,CAOI;;AACA,kBAAY;AACR,cAAMG,MAAM,GAAC,MAAOC,KAAK,CAAC;AACrBC,UAAAA,GAAG,EAAC,gCADiB;AAErBC,UAAAA,MAAM,EAAC,MAFc;AAGrBC,UAAAA,OAAO,EAAC;AACJpB,YAAAA,IAAI,EAACqB,OADD;AAEJC,YAAAA,EAAE,EAACZ,OAFC;AAGJN,YAAAA,MAAM,EAACG,MAAM,CAACgB;AAHV;AAHa,SAAD,CAAzB;AAUGC,QAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACU,IAAnB;AACAC,QAAAA,QAAQ,CAAC;AACPnB,UAAAA,IAAI,EAAC,WADE;AAEPR,UAAAA,IAAI,EAACgB,MAAM,CAACU;AAFL,SAAD,CAAR;AAMH,OAlBJ;;AAmBA,aAAM,EACF,GAAGpB,KADD;AAEFN,QAAAA,IAAI,EAACqB;AAFH,OAAN;;AAKJ,SAAK,WAAL;AACI,aAAM,EACF,GAAGf,KADD;AAEFN,QAAAA,IAAI,EAACO,MAAM,CAACP;AAFV,OAAN;AA7CR;AAuDH,CAzDD;;AA2DA,eAAeK,OAAf","sourcesContent":["export const initialState={\r\n    user:null\r\n    ,currIndex:0,\r\n    currUser:null,\r\n    sellUser:null,\r\n    amount:0\r\n};\r\n\r\n\r\n\r\nconst reducer= (state,action)=>{\r\n\r\n    switch(action.type){\r\n       case \"SET_INDEX\":\r\n           return{\r\n               ...state,\r\n               currIndex:action.index\r\n           };\r\n        case \"SET_USER\":\r\n            return {\r\n                ...state,\r\n                currUser:action.user\r\n\r\n            };\r\n        case \"SELECTED_USER\":\r\n            const userInd=state.user.findIndex(item=>item.first==action.name);\r\n\r\n            // const newUser=[...state.user];\r\n            // newUser[userInd]=newUser[userInd].balance>action.amt?{...newUser[userInd],balance:Number(newUser[userInd].balance) + Number(action.amt)}:null\r\n\r\n            const userIndex=state.user.findIndex(item=>item.first==state.currUser.first);\r\n            // newUser[userIndex]=newUser[userIndex].balance>action.amt?{...newUser[userIndex],balance:newUser[userIndex].balance-action.amt}:null\r\n            async () => {\r\n                const result=await  axios({\r\n                     url:'http://localhost:8080/api/send',\r\n                     method:\"POST\",\r\n                     payload:{\r\n                         user:newUser,\r\n                         id:userInd,\r\n                         amount:action.amt\r\n                     }\r\n                   \r\n                   })\r\n                   console.log(result.data);\r\n                   dispatch({\r\n                     type:\"TAKE_USER\",\r\n                     user:result.data\r\n                   })\r\n                   \r\n                   \r\n               }\r\n            return{\r\n                ...state,\r\n                user:newUser\r\n                \r\n            };\r\n        case \"TAKE_USER\":\r\n            return{\r\n                ...state,\r\n                user:action.user\r\n            };\r\n                \r\n            \r\n\r\n           \r\n\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}